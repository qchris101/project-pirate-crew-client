{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/crews/Home.js","api/crew.js","components/crews/CrewForm.js","components/crews/CrewCreate.js","components/crews/Crew.js","components/crews/Crews.js","components/crews/UsersCreatedCrews.js","components/crews/CrewEdit.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","createCrew","crew","indexCrew","get","indexUsersCrew","showCrew","deleteCrew","updateCrew","CrewForm","handleSubmit","setName","CrewCreate","createdId","setCreatedId","Crew","setCrew","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","Spinner","animation","role","Crews","crews","setCrews","response","getCrews","length","crewList","map","_id","UsersCreatedCrews","usersCrews","setUsersCrews","getAllCrews","title","CrewEdit","updated","setUpdated","App","props","setState","deleteAlert","state","msgAlerts","filter","msg","uuid","this","path","element","Component","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffab9d64.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n// import { Signpost2Fill } from 'react-bootstrap-icons'\r\nimport './Header.css'\r\n\r\nconst authenticatedOptions = (\r\n  <>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n    <NavLink to='/crews/create' className='nav-link'>Create a Crew</NavLink>\r\n    <NavLink to='/crews/' className='nav-link'>All Crews </NavLink>\r\n    {/* <NavLink to='/crews/owner' className='nav-link'>See Your Crews </NavLink> */}\r\n  </>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <>\r\n    <NavLink to='/' className='nav-link'>Home</NavLink>\r\n  </>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar className='navbar' bg='primary' variant='dark' expand='md'>\r\n    <Container>\r\n      <Navbar.Brand>\r\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }} className='logo'>One Piece Pirate Crew</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='ms-auto'>\r\n          {user && (\r\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\r\n          )}\r\n          {alwaysOptions}\r\n          {user ? authenticatedOptions : unauthenticatedOptions}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: ' https://project-pirate-crew.herokuapp.com',\r\n  development: 'http://localhost:8000'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (email, password, passwordConfirmation) => {\r\n  return axios.post(apiUrl + '/sign-up/', {\r\n    credentials: {\r\n      email,\r\n      password,\r\n      password_confirmation: passwordConfirmation\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return axios.post(apiUrl + '/sign-in/', {\r\n    credentials: {\r\n      email,\r\n      password\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = user => {\r\n  return axios.delete(apiUrl + '/sign-out/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (oldPassword, newPassword, user) => {\r\n  return axios.patch(\r\n    apiUrl + '/change-password/',\r\n    {\r\n      passwords: {\r\n        old: oldPassword,\r\n        new: newPassword\r\n      }\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Login.css'\r\n\r\nconst SignUp = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignUp = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await signUp(email, password, passwordConfirmation)\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      setPasswordConfirmation('')\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='row'>\r\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n          <div className='loginLeft'>\r\n            <h3 className='signUp-text'>Sign Up</h3>\r\n            <Form className='loginBox' onSubmit={onSignUp}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type='email'\r\n                  name='email'\r\n                  value={email}\r\n                  placeholder='Enter email'\r\n                  onChange={event => setEmail(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  name='password'\r\n                  value={password}\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  onChange={event => setPassword(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='passwordConfirmation'>\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  name='passwordConfirmation'\r\n                  value={passwordConfirmation}\r\n                  type='password'\r\n                  placeholder='Confirm Password'\r\n                  onChange={event => setPasswordConfirmation(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Button className='loginRegisterButton Bttn' variant='primary' type='submit'>Submit</Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Login.css'\r\n\r\nconst SignIn = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignIn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='row'>\r\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n          <h3>Sign In</h3>\r\n          <Form className='loginBox' onSubmit={onSignIn}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                placeholder='Enter email'\r\n                onChange={event => setEmail(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                placeholder='Password'\r\n                onChange={event => setPassword(event.target.value)\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Button className='loginRegisterButton Bttn' variant='primary' type='submit'>Submit</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nconst SignOut = ({ msgAlert, clearUser, user }) => {\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  // this is like componentDidMount, it will run whenever the SignOut component\r\n  // is mounted (or added) to the page\r\n  useEffect(() => {\r\n  // for performance reasons, when using `useEffect`\r\n  // it's a best practice to create a helper function w/ async/await\r\n    const performSignOut = async () => {\r\n    // make a signOut axios request\r\n      await signOut(user)\r\n\r\n      msgAlert({\r\n        heading: 'Signed Out Successfully',\r\n        message: signOutSuccess,\r\n        variant: 'success'\r\n      })\r\n\r\n      // reset the user back to its initial value\r\n      clearUser()\r\n      setShouldNavigate(true)\r\n    }\r\n    performSignOut()\r\n  }, [])\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport default SignOut\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ChangePassword = ({ msgAlert, user }) => {\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onChangePassword = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await changePassword(oldPassword, newPassword, user)\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Change Password</h3>\r\n        <Form onSubmit={onChangePassword}>\r\n          <Form.Group controlId='oldPassword'>\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='oldPassword'\r\n              value={oldPassword}\r\n              type='password'\r\n              placeholder='Old Password'\r\n              onChange={event => setOldPassword(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='newPassword'>\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='newPassword'\r\n              value={newPassword}\r\n              type='password'\r\n              placeholder='New Password'\r\n              onChange={event => setNewPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\n\r\n// import SignIn from '../auth/SignIn'\r\n// import { Link } from 'react-router-dom'\r\n\r\n// import SignUp from '../auth/SignUp'\r\n\r\nconst Home = () => (\r\n\r\n  <div className=\"txtwrapper\">\r\n    <h1>One Piece Pirate Crew Creator</h1>\r\n\r\n  </div>\r\n\r\n)\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\nimport apiUrl from '../apiConfig'\r\n\r\nexport const createCrew = (name, user) => {\r\n  return axios.post(\r\n    `${apiUrl}/crews/`,\r\n    { crew: { name } },\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\nexport const indexCrew = (user) => {\r\n  return axios.get(\r\n    `${apiUrl}/crews/`,\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\nexport const indexUsersCrew = (user) => {\r\n  return axios.get(\r\n    `${apiUrl}/crews/owner/`,\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport const showCrew = (id, user) => {\r\n  return axios.get(`${apiUrl}/crews/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteCrew = (id, user) => {\r\n  return axios.delete(`${apiUrl}/crews/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateCrew = (id, name, user) => {\r\n  return axios.patch(\r\n    `${apiUrl}/crews/${id}/`,\r\n    { crew: { name } },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { SendCheck } from 'react-bootstrap-icons'\r\n\r\nconst CrewForm = ({ handleSubmit, name, setName }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='name'>\r\n      <Form.Label>Enter Crew Name</Form.Label>\r\n      <Form.Control\r\n        placeholder='Crew Name'\r\n        name='name'\r\n        value={name}\r\n        onChange={event => setName(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Button className='mt-2 Bttn' variant='primary' type='submit'>Submit <SendCheck /></Button>\r\n    <div className='mt-5 footer' >Time to find the One Piece</div>\r\n  </Form>\r\n)\r\nexport default CrewForm\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { createCrew } from '../../api/crew'\r\nimport CrewForm from './CrewForm'\r\n\r\nconst CrewCreate = ({ user, msgAlert }) => {\r\n  const [name, setName] = useState('')\r\n  const [createdId, setCreatedId] = useState(null)\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createCrew(name, user)\r\n      setCreatedId(res.data.crew.id)\r\n      msgAlert({\r\n        heading: 'Crew Created',\r\n        message: `Created ${name} successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to create Crew',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if crew has been created,Navigate to the 'show' page\r\n    return <Navigate to={`/crews/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-3 mx-auto mt-5'>\r\n        <h3>Create Crew</h3>\r\n        <CrewForm\r\n          handleSubmit={handleSubmit}\r\n          name={name}\r\n          setName={setName}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrewCreate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\nimport { deleteCrew, showCrew } from '../../api/crew'\r\n// import { format } from 'timeago.js'\r\nimport './Crew.css'\r\nimport { SendCheck, TrashFill } from 'react-bootstrap-icons'\r\n\r\nconst Crew = ({ user, msgAlert }) => {\r\n  const [crew, setCrew] = useState(null)\r\n  const [deleted, setDeleted] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showCrew(id, user)\r\n        setCrew(res.data.crew)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Crew failed to load this is coming from (Crew.js Error)',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleDeleteClick = async () => {\r\n    try {\r\n      await deleteCrew(id, user)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete Crew',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!crew) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/crews' />\r\n  } else {\r\n    // We have a post, display it!\r\n    return (\r\n      <div className='crew'>\r\n        <div className='CrewWrapper'>\r\n          <h3 >{crew.name}</h3>\r\n          <Link to={`/crews/${id}/edit`}>\r\n            <Button className='Bttn' variant='primary' type='submit'>Update Crew <SendCheck /></Button>\r\n          </Link>\r\n          <Button className='Bttn' variant='danger' onClick={handleDeleteClick}>Delete Crew <TrashFill /></Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Crew\r\n","import React, { useEffect, useState } from 'react'\r\nimport { indexCrew } from '../../api/crew'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport './Crews.css'\r\n\r\n// import { format } from 'timeago.js'\r\n// import './Posts.css'\r\nconst Crews = ({ user, msgAlert, handleDeleteClick }) => {\r\n  const [crews, setCrews] = useState([])\r\n\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getCrews = async () => {\r\n      try {\r\n        const response = await indexCrew(user)\r\n        setCrews(response.data.crew)\r\n      } catch (error) {\r\n        // Alert the user, that they failed to sign up\r\n        msgAlert({\r\n          heading: 'Crews cant be displayed: ' + error.message,\r\n          message: 'Cant index Crews',\r\n          // this will be red\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    getCrews()\r\n  }, [])\r\n\r\n  if (crews.length === 0) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  const crewList = crews.map(crew => (\r\n    <div className='crews' key={crews._id}>\r\n      <Link to={`/crews/${crew.id}/edit`}>{crew.name}</Link>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Crews</h3>\r\n        <ul>{crewList}</ul>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Crews\r\n","import React, { useEffect, useState } from 'react'\r\nimport { indexUsersCrew } from '../../api/crew'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\n// import { format } from 'timeago.js'\r\n// import './Posts.css'\r\nconst UsersCreatedCrews = ({ user, msgAlert }) => {\r\n  const [usersCrews, setUsersCrews] = useState([])\r\n\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAllCrews = async () => {\r\n      try {\r\n        const res = await indexUsersCrew(user)\r\n        setUsersCrews(res.data.crews)\r\n      } catch (error) {\r\n        // Alert the user, that they failed to sign up\r\n        msgAlert({\r\n          heading: 'Crews Cant be displayed: ' + error.message,\r\n          message: 'Cant index Crew',\r\n          // this will be red\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    getAllCrews()\r\n  }, [])\r\n\r\n  if (!usersCrews.length) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  const crewList = usersCrews.map(crew => (\r\n    <div className='posts' key={crew._id}>\r\n      <Link to={`/crews/${crew._id}`}>{crew.title}</Link>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Crews</h3>\r\n        <ul>{crewList}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersCreatedCrews\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\nimport { showCrew, updateCrew } from '../../api/crew'\r\nimport CrewForm from './CrewForm'\r\n\r\nconst CrewEdit = ({ user, msgAlert }) => {\r\n  const [name, setName] = useState('')\r\n  //   const [text, setText] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showCrew(id, user)\r\n        setName(res.data.crew.name)\r\n        // setText(res.data.crew.text)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Failed to load crew',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await updateCrew(id, name, user)\r\n      setUpdated(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to update crew',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (updated) {\r\n    // Navigate to the 'show' page\r\n    return <Navigate to={`/crews/${id}`} />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Edit Crew Name</h3>\r\n        <CrewForm\r\n          handleSubmit={handleSubmit}\r\n          name={name}\r\n          setName={setName}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrewEdit\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\n// import AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\n\r\nimport Home from './components/crews/Home'\r\nimport CrewCreate from './components/crews/CrewCreate'\r\nimport Crew from './components/crews/Crew'\r\nimport Crews from './components/crews/Crews'\r\nimport UsersCreatedCrews from './components/crews/UsersCreatedCrews'\r\nimport CrewEdit from './components/crews/CrewEdit'\r\n\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n  setUser = (user) => this.setState({ user })\r\n\r\n  clearUser = () => this.setState({ user: null })\r\n\r\n  deleteAlert = (id) => {\r\n    this.setState((state) => {\r\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n    })\r\n  }\r\n\r\n  msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    this.setState((state) => {\r\n      return {\r\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlerts, user } = this.state\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className='textLink'>\r\n          <Header user={user} />\r\n          {msgAlerts.map((msgAlert) => (\r\n            <AutoDismissAlert\r\n              key={msgAlert.id}\r\n              heading={msgAlert.heading}\r\n              variant={msgAlert.variant}\r\n              message={msgAlert.message}\r\n              id={msgAlert.id}\r\n              deleteAlert={this.deleteAlert}\r\n            />\r\n          ))}\r\n\r\n          <main className='container'>\r\n            <Routes>\r\n              <Route\r\n                path='/sign-up'\r\n                element={<SignUp msgAlert={this.msgAlert} setUser={this.setUser} /> }\r\n              />\r\n              <Route\r\n                path='/sign-in'\r\n                element={<SignIn msgAlert={this.msgAlert} setUser={this.setUser} /> }\r\n              />\r\n              <Route\r\n                path='/sign-out'\r\n                element={<SignOut msgAlert={this.msgAlert} clearUser={this.clearUser} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/change-password'\r\n                element={<ChangePassword msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n\r\n              <Route\r\n                path='/'\r\n                element={<Home msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/crews/create/'\r\n                element={<CrewCreate msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/crews/:id/'\r\n                element={<Crew msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/crews/'\r\n                element={<Crews msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/crews/:id/edit/'\r\n                element={<CrewEdit msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n              <Route\r\n                path='/crews/owner'\r\n                element={<UsersCreatedCrews msgAlert={this.msgAlert} user={user} /> }\r\n              />\r\n            </Routes>\r\n          </main>\r\n        </div>\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}